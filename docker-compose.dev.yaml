version: '3'
services:
  db:
    image: "postgres:11"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=gym
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - web_nw
  redis:
    image: "redis:5.0.4-stretch"
    ports:
      - "6379"
    networks:
      - web_nw
  ui:
    build:
      context: ui
      dockerfile: Dockerfile.dev
    networks:
      - web_nw
    volumes:
      - ./ui/react-ui:/app
      - node_modules:/app/node_modules
    restart: always
  check-executor:
    build:
      context: check_executor
      dockerfile: Dockerfile.dev
    networks:
      - web_nw
    volumes:
      - ./check_executor/src:/app
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    depends_on:
      - redis
  check-executor-worker:
    build:
      context: check_executor
      dockerfile: Dockerfile.dev
    entrypoint: celery
    command: -A run.celery worker --loglevel=info
    volumes:
      - ./check_executor/src:/app
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - web_nw
  api:
    build:
      context: api
      dockerfile: Dockerfile.dev
    depends_on:
      - check-executor
      - db
    networks:
      - web_nw
    volumes:
      - ./api/src:/app
      - ./courses:/courses
    restart: always
  proxy:
    build:
      context: proxy
      dockerfile: Dockerfile.dev
    depends_on:
      - ui
      - api
    ports:
      - "8000:80"
    networks:
      - web_nw
    restart: always
networks:
  web_nw:
    driver: bridge
volumes:
  node_modules:
  db_data:
    